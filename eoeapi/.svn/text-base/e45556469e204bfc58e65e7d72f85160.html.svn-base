{"title":"Designing for Responsiveness","text":"<table id=\"toc\" class=\"toc\"><tr><td><div id=\"toctitle\"><h2>\u76ee\u5f55<\/h2><\/div>\n<ul>\n<li class=\"toclevel-1 tocsection-1\"><a href=\"#Designing_for_Responsiveness-.E8.AE.BE.E8.AE.A1.E5.93.8D.E5.BA.94\"><span class=\"tocnumber\">1<\/span> <span class=\"toctext\">Designing for Responsiveness-\u8bbe\u8ba1\u54cd\u5e94<\/span><\/a>\n<ul>\n<li class=\"toclevel-2 tocsection-2\"><a href=\"#What_Triggers_ANR.3F-.E6.98.AF.E4.BB.80.E4.B9.88.E5.8E.9F.E5.9B.A0.E5.BC.95.E5.8F.91.E7.9A.84ANR.3F\"><span class=\"tocnumber\">1.1<\/span> <span class=\"toctext\">What Triggers ANR?-\u662f\u4ec0\u4e48\u539f\u56e0\u5f15\u53d1\u7684ANR?<\/span><\/a><\/li>\n<li class=\"toclevel-2 tocsection-3\"><a href=\"#How_to_Avoid_ANR-.E5.A6.82.E4.BD.95.E9.81.BF.E5.85.8DANR\"><span class=\"tocnumber\">1.2<\/span> <span class=\"toctext\">How to Avoid ANR-\u5982\u4f55\u907f\u514dANR<\/span><\/a><\/li>\n<li class=\"toclevel-2 tocsection-4\"><a href=\"#Reinforcing_Responsiveness-.E5.8A.A0.E5.BC.BA.E5.93.8D.E5.BA.94\"><span class=\"tocnumber\">1.3<\/span> <span class=\"toctext\">Reinforcing Responsiveness-\u52a0\u5f3a\u54cd\u5e94<\/span><\/a><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/td><\/tr><\/table>\n<h1> <span class=\"mw-headline\" id=\"Designing_for_Responsiveness-.E8.AE.BE.E8.AE.A1.E5.93.8D.E5.BA.94\">Designing for Responsiveness-\u8bbe\u8ba1\u54cd\u5e94<\/span><\/h1>\n<p>It's possible to write code that wins every performance test in the world, but still sends users in a fiery rage when they try to use the application. These are the applications that aren't responsive enough \u2014 the ones that feel sluggish, hang or freeze for significant periods, or take too long to process input.<br \/>\n\u5c31\u7b97\u7f16\u5199\u7684\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u6240\u6709\u7684\u6027\u80fd\u6d4b\u8bd5\u3002\u4f46\u662f\u5f53\u7528\u6237\u4e0d\u65ad\u4f7f\u7528\u8f6f\u4ef6\u65f6\uff0c\u8fd8\u662f\u4ecd\u7136\u53ef\u80fd\u7ed9\u7528\u6237\u5e26\u6765\u56f0\u60d1\u548c\u4e0d\u6ee1\u3002\u8fd9\u4e9b\u5c31\u662f\u5e94\u7528\u54cd\u5e94\u4e0d\u80fd\u505a\u5230\u8db3\u591f\u5feb\u7684\u7ed3\u679c\uff0c\u5982\u53cd\u5e94\u8fdf\u949d\u3001\u7cfb\u7edf\u957f\u65f6\u95f4\u6302\u8d77\u6216\u51bb\u7ed3\u6216\u662f\u5f88\u4e45\u4e0d\u80fd\u54cd\u5e94\u8f93\u5165\u3002<br \/>\n<br \/>\nIn Android, the system guards against applications that are insufficiently responsive for a period of time by displaying a dialog to the user, called the Application Not Responding (ANR) dialog, shown at right in Figure 1. The user can choose to let the application continue, but the user won't appreciate having to act on this dialog every time he or she uses your application. It's critical to design responsiveness into your application, so that the system never has cause to display an ANR dialog to the user.<br \/>\n\u7528Android\u7684\u8bdd\u6765\u8bf4\uff0c\u4e0d\u80fd\u591f\u53ca\u65f6\u54cd\u5e94\u7684\u5e94\u7528\u7ecf\u5e38\u4f7f\u7cfb\u7edf\u5f39\u51fa\u4ee4\u4eba\u6050\u60e7\u7684\"\u5e94\u7528\u6ca1\u6709\u54cd\u5e94\"(ANR)\u7684\u6d88\u606f\uff0c\u5982\u53f3\u56fe1\u3002\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u8ba9\u7a0b\u5e8f\u7ee7\u7eed\u8fd0\u884c\uff0c\u4f46\u662f\u7528\u6237\u6bcf\u6b21\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\u90fd\u9700\u8981\u5982\u6b64\u64cd\u4f5c\uff0c\u8fd9\u4f7f\u5f97\u4f60\u7684\u8bbe\u8ba1\u4ea7\u54c1\u5c06\u4e0d\u518d\u5f97\u5230\u7528\u6237\u7684\u5173\u6ce8\uff0c\u6240\u4ee5\u7528\u6237\u4ece\u6765\u4e0d\u4f1a\u9009\u62e9\u4f1a\u62a5ANR\u9519\u8bef\u7684\u7a0b\u5e8f\u3002<br \/>\n<br \/>\nGenerally, the system displays an ANR if an application cannot respond to user input. For example, if an application blocks on some I\/O operation (frequently a network access), then the main application thread won't be able to process incoming user input events. After a time, the system concludes that the application is frozen, and displays the ANR to give the user the option to kill it.<br \/>\n\u901a\u5e38\uff0c\u8fd9\u79cd\u60c5\u51b5\u51fa\u73b0\u5728\u5e94\u7528\u4e0d\u80fd\u53ca\u65f6\u54cd\u5e94\u7528\u6237\u8f93\u5165\u4e0a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u963b\u585e\u5728IO\u64cd\u4f5c\uff08\u5e38\u5e38\u662f\u7f51\u7edc\u8bbf\u95ee\u7684\u60c5\u51b5\uff09\u4e0a\u65f6\uff0c\u4e3b\u5e94\u7528\u7ebf\u7a0b\u5c31\u65e0\u6cd5\u5904\u7406\u5df2\u7ecf\u5230\u8fbe\u7684\u7528\u6237\u8f93\u5165\u4e8b\u4ef6\u3002\u4e00\u5b9a\u7684\u65f6\u95f4\u8fc7\u540e\uff0c\u7cfb\u7edf\u53ef\u80fd\u8ba4\u4e3a\u4f60\u7684\u7a0b\u5e8f\u5df2\u7ecf\u6302\u8d77\uff0c\u4e8e\u662f\u5c31\u53d1\u9001\u6d88\u606f\u5141\u8bb8\u7528\u6237\u7ec8\u6b62\u8be5\u7a0b\u5e8f\u3002\u540c\u65f6\uff0c\u5982\u679c\u4f60\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u4e00\u4e2a\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\u82b1\u8d39\u592a\u591a\u65f6\u95f4\uff0c\u6216\u662f\u5728\u6e38\u620f\u7a0b\u5e8f\u4e2d\u53ef\u80fd\u6b63\u5728\u8ba1\u7b97\u4e0b\u4e00\u526f\u573a\u666f\u65f6\uff0c\u540c\u6837\u7cfb\u7edf\u4e5f\u53ef\u80fd\u8ba4\u4e3a\u4f60\u7684\u7a0b\u5e8f\u5df2\u7ecf\u6302\u8d77\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd0\u7528\u4e0a\u8ff0\u6280\u672f\u8fdb\u884c\u6709\u6548\u7387\u7684\u8fd0\u7b97\u603b\u662f\u5982\u6b64\u91cd\u8981\uff0c\u5373\u4f7f\u662f\u6700\u9ad8\u6548\u7684\u4ee3\u7801\u4efb\u7136\u9700\u8981\u65f6\u95f4\u53bb\u6267\u884c\u3002<br \/>\n<br \/>\nSimilarly, if your application spends too much time building an elaborate in-memory structure, or perhaps computing the next move in a game, the system will conclude that your application has hung. It's always important to make sure these computations are efficient using the techniques above, but even the most efficient code still takes time to run.<br \/>\n\u540c\u65f6\uff0c\u5982\u679c\u4f60\u4e3a\u5185\u5b58\u4e2d\u521b\u5efa\u4e00\u4e2a\u590d\u6742\u7684\u6570\u636e\u82b1\u8d39\u592a\u591a\u7684\u65f6\u95f4\uff0c\u6216\u662f\u5728\u6e38\u620f\u7a0b\u5e8f\u4e2d\u53ef\u80fd\u6b63\u5728\u8ba1\u7b97\u4e0b\u4e00\u526f\u573a\u666f\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\uff0c\u7cfb\u7edf\u540c\u6837\u53ef\u4ee5\u8ba4\u4e3a\u4f60\u7684\u7a0b\u5e8f\u5df2\u7ecf\u6302\u8d77\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd0\u7528\u4e0a\u8ff0\u6280\u672f\u8fdb\u884c\u6709\u6548\u7684\u8fd0\u7b97\u603b\u662f\u5982\u6b64\u91cd\u8981\uff0c\u5373\u4f7f\u6700\u9ad8\u6548\u7684\u4ee3\u7801\u4e5f\u4ecd\u7136\u9700\u8981\u65f6\u95f4\u53bb\u6267\u884c\u3002<br \/>\n<br \/>\nIn both of these cases, the recommended approach is to create a child thread and do most of your work there. This keeps the main thread (which drives the user interface event loop) running and prevents the system from concluding that your code has frozen. Since such threading usually is accomplished at the class level, you can think of responsiveness as a class problem. (Compare this with basic performance, which was described above as a method-level concern.)<br \/>\n\u9488\u5bf9\u4e0a\u8ff0\u4e24\u7c7b\u60c5\u51b5\uff0c\u89e3\u51b3\u65b9\u6848\u901a\u5e38\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u5b50\u7ebf\u7a0b\u53bb\u6267\u884c\u8fd9\u91cc\u7684\u5927\u591a\u6570\u5de5\u4f5c\u3002\u8fd9\u6837\u5c31\u53ef\u4f7f\u4e3b\u7ebf\u7a0b\uff08\u54cd\u5e94\u7528\u6237\u63a5\u53e3\u7684\u4e8b\u4ef6\u5faa\u73af\uff09\u80fd\u6b63\u5e38\u8fd0\u884c\u5e76\u907f\u514d\u7cfb\u7edf\u8bef\u8ba4\u4e3a\u7a0b\u5e8f\u5df2\u7ecf\u51bb\u7ed3\u3002\u7531\u4e8e\u8fd9\u4e9b\u7ebf\u7a0b\u901a\u5e38\u7531\u7c7b\u7ea7\u522b\u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u4f60\u53ef\u4ee5\u60f3\u5230\u7a0b\u5e8f\u54cd\u5e94\u4e0d\u592a\u597d\u4e0e\u7c7b\u95ee\u9898\u6709\u5173\uff08\u5728\u57fa\u672c\u6027\u80fd\u4e0e\u524d\u8ff0\u65b9\u6cd5\u7ea7\u76f8\u5bf9\u6bd4\u800c\u8a00\u3002\uff09\u3002<br \/>\n<br \/>\nThis document describes how the Android system determines whether an application is not responding and provides guidelines for ensuring that your application stays responsive.<br \/>\n\u672c\u6587\u6863\u63cf\u8ff0\u4e86\u5e94\u7528\u7a0b\u5e8f\u53d7Android\u7cfb\u7edf\u7684\u54cd\u5e94\u7684\u539f\u56e0\uff0c\u5e76\u63d0\u4f9b\u6307\u5bfc\u65b9\u9488\u6765\u786e\u4fdd\u4f60\u7684\u5e94\u7528\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u4ecd\u7136\u53ef\u4ee5\u505a\u51fa\u54cd\u5e94\u3002<br \/>\n<br \/>\n<img src=\"http:\/\/docs.eoeandroid.com\/images\/anr.png\" alt=\"anr.png\" \/>\n<\/p>\n<h2> <span class=\"mw-headline\" id=\"What_Triggers_ANR.3F-.E6.98.AF.E4.BB.80.E4.B9.88.E5.8E.9F.E5.9B.A0.E5.BC.95.E5.8F.91.E7.9A.84ANR.3F\">What Triggers ANR?-\u662f\u4ec0\u4e48\u539f\u56e0\u5f15\u53d1\u7684ANR?<\/span><\/h2>\n<p>In Android, application responsiveness is monitored by the Activity Manager and Window Manager system services. Android will display the ANR dialog for a particular application when it detects one of the following conditions:<br \/>\n\u5728Android\u5e94\u7528\u7a0b\u5e8f\u7684\u54cd\u5e94\u76d1\u6d4b\u6d3b\u52a8\u7ba1\u7406\u548c\u7a97\u53e3\u7ba1\u7406\u7cfb\u7edf\u670d\u52a1\u4e2d\uff0cAndroid\u5c06\u4f1a\u663e\u793a\u4e00\u4e2a\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8fANR\u5bf9\u8bdd\u6846\uff0c\u5b83\u7684\u68c0\u6d4b\u6761\u4ef6\u5982\u4e0b\uff1a<br \/>\n<br \/>\nNo response to an input event (e.g. key press, screen touch) within 5 seconds<br \/>\nA <a rel=\"nofollow\" target=\"_blank\" class=\"external text\" href=\"http:\/\/docs.eoeandroid.com\/reference\/android\/content\/BroadcastReceiver.html\">BroadcastReceiver<\/a> hasn't finished executing within 10 seconds<br \/>\n--5\u79d2\u5185\u6ca1\u6709\u54cd\u5e94\u8f93\u5165\u4e8b\u4ef6\uff08\u5982\u6309\u952e\uff0c\u89e6\u6478\u5c4f\u5e55\u7b49\uff09<br \/>\n--<a rel=\"nofollow\" target=\"_blank\" class=\"external text\" href=\"http:\/\/docs.eoeandroid.com\/reference\/android\/content\/BroadcastReceiver.html\">BroadcastReceiver<\/a>\u7684\u6700\u957f\u6267\u884c\u65f6\u95f4\u8d85\u8fc710\u79d2<br \/>\n<br \/>\n<\/p>\n<h2> <span class=\"mw-headline\" id=\"How_to_Avoid_ANR-.E5.A6.82.E4.BD.95.E9.81.BF.E5.85.8DANR\">How to Avoid ANR-\u5982\u4f55\u907f\u514dANR<\/span><\/h2>\n<p>Given the above definition for ANR, let's examine why this can occur in Android applications and how best to structure your application to avoid ANR.<br \/>\n\u8003\u8651\u4e0a\u9762\u7684ANR\u5b9a\u4e49\uff0c\u8ba9\u6211\u4eec\u6765\u7814\u7a76\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u5b83\u4f1a\u5728Android\u5e94\u7528\u7a0b\u5e8f\u91cc\u53d1\u751f\u548c\u5982\u4f55\u6700\u4f73\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u6765\u907f\u514dANR\u3002<br \/>\n<br \/>\nAndroid applications normally run entirely on a single (i.e. main) thread. This means that anything your application is doing in the main thread that takes a long time to complete can trigger the ANR dialog because your application is not giving itself a chance to handle the input event or Intent broadcast.<br \/>\nAndroid\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u662f\u8fd0\u884c\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u7ebf\u7a0b\uff08\u4f8b\u5982\uff0cmain\uff09\u91cc\u3002\u8fd9\u610f\u5473\u7740\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u6240\u505a\u7684\u4e8b\u60c5\u5982\u679c\u5728\u4e3b\u7ebf\u7a0b\u91cc\u5360\u7528\u4e86\u592a\u957f\u7684\u65f6\u95f4\u7684\u8bdd\uff0c\u5c31\u4f1a\u5f15\u53d1ANR\u5bf9\u8bdd\u6846\uff0c\u56e0\u4e3a\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u5e76\u6ca1\u6709\u7ed9\u81ea\u5df1\u673a\u4f1a\u6765\u5904\u7406\u8f93\u5165\u4e8b\u4ef6\u6216\u8005Intent\u5e7f\u64ad\u3002<br \/>\n<br \/>\nTherefore any method that runs in the main thread should do as little work as possible. In particular, Activities should do as little as possible to set up in key life-cycle methods such as onCreate() and onResume(). Potentially long running operations such as network or database operations, or computationally expensive calculations such as resizing bitmaps should be done in a child thread (or in the case of databases operations, via an asynchronous request). However, this does not mean that your main thread should block while waiting for the child thread to complete \u2014 nor should you call Thread.wait() or Thread.sleep(). Instead of blocking while waiting for a child thread to complete, your main thread should provide a <a rel=\"nofollow\" target=\"_blank\" class=\"external text\" href=\"http:\/\/docs.eoeandroid.com\/reference\/android\/os\/Handler.html\">Handler<\/a> for child threads to post back to upon completion. Designing your application in this way will allow your main thread to remain responsive to input and thus avoid ANR dialogs caused by the 5 second input event timeout. These same practices should be followed for any other threads that display UI, as they are also subject to the same timeouts.<br \/>\n\u56e0\u6b64\uff0c\u8fd0\u884c\u5728\u4e3b\u7ebf\u7a0b\u91cc\u7684\u4efb\u4f55\u65b9\u6cd5\u90fd\u5c3d\u53ef\u80fd\u5c11\u505a\u4e8b\u60c5\u3002\u7279\u522b\u662f\uff0cActivity\u5e94\u8be5\u5728\u5b83\u7684\u5173\u952e\u751f\u547d\u5468\u671f\u65b9\u6cd5\uff08\u5982onCreate()\u548conResume()\uff09\u91cc\u5c3d\u53ef\u80fd\u5c11\u7684\u53bb\u505a\u521b\u5efa\u64cd\u4f5c\u3002\u6f5c\u5728\u7684\u8017\u65f6\u64cd\u4f5c\uff0c\u4f8b\u5982\u7f51\u7edc\u6216\u6570\u636e\u5e93\u64cd\u4f5c\uff0c\u6216\u8005\u9ad8\u8017\u65f6\u7684\u8ba1\u7b97\u5982\u6539\u53d8\u4f4d\u56fe\u5c3a\u5bf8\uff0c\u5e94\u8be5\u5728\u5b50\u7ebf\u7a0b\u91cc\uff08\u6216\u8005\u4ee5\u6570\u636e\u5e93\u64cd\u4f5c\u4e3a\u4f8b\uff0c\u901a\u8fc7\u5f02\u6b65\u8bf7\u6c42\u7684\u65b9\u5f0f\uff09\u6765\u5b8c\u6210\u3002\u7136\u800c\uff0c\u4e0d\u662f\u8bf4\u4f60\u7684\u4e3b\u7ebf\u7a0b\u963b\u585e\u5728\u90a3\u91cc\u7b49\u5f85\u5b50\u7ebf\u7a0b\u7684\u5b8c\u6210\u2014\u2014\u4e5f\u4e0d\u662f\u8c03\u7528Thread.wait()\u6216\u662fThread.sleep()\u3002\u66ff\u4ee3\u7684\u65b9\u6cd5\u662f\uff0c\u4e3b\u7ebf\u7a0b\u5e94\u8be5\u4e3a\u5b50\u7ebf\u7a0b\u63d0\u4f9b\u4e00\u4e2aHandler\uff0c\u4ee5\u4fbf\u5b8c\u6210\u65f6\u80fd\u591f\u63d0\u4ea4\u7ed9\u4e3b\u7ebf\u7a0b\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8bbe\u8ba1\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5c06\u80fd\u4fdd\u8bc1\u4f60\u7684\u4e3b\u7ebf\u7a0b\u4fdd\u6301\u5bf9\u8f93\u5165\u7684\u54cd\u5e94\u6027\u5e76\u80fd\u907f\u514d\u7531\u4e8e5\u79d2\u8f93\u5165\u4e8b\u4ef6\u7684\u8d85\u65f6\u5f15\u53d1\u7684ANR\u5bf9\u8bdd\u6846\u3002\u8fd9\u79cd\u505a\u6cd5\u5e94\u8be5\u5728\u5176\u5b83\u663e\u793aUI\u7684\u7ebf\u7a0b\u91cc\u6548\u4eff\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u53d7\u76f8\u540c\u7684\u8d85\u65f6\u5f71\u54cd\u3002<br \/>\n<br \/>\nYou can use <a rel=\"nofollow\" target=\"_blank\" class=\"external text\" href=\"http:\/\/docs.eoeandroid.com\/reference\/android\/os\/StrictMode.html\">StrictMode<\/a> to help find potentially long running operations such as network or database operations that you might accidentally be doing your main thread.<br \/>\n\u60a8\u53ef\u4ee5\u4f7f\u7528StrictMode\u6765\u5e2e\u52a9\u627e\u5230\u6f5c\u5728\u7684\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u64cd\u4f5c,\u6bd4\u5982\u7f51\u7edc\u6216\u6570\u636e\u5e93\u64cd\u4f5c,\u4f46\u662f\uff0c\u4f60\u53ef\u80fd\u4e0d\u5c0f\u5fc3\u505a\u6389\u4f60\u7684\u4e3b\u7ebf\u7a0b\u3002<br \/>\n<br \/>\nThe specific constraint on IntentReceiver execution time emphasizes what they were meant to do: small, discrete amounts of work in the background such as saving a setting or registering a Notification. So as with other methods called in the main thread, applications should avoid potentially long-running operations or calculations in BroadcastReceivers. But instead of doing intensive tasks via child threads (as the life of a BroadcastReceiver is short), your application should start a <a rel=\"nofollow\" target=\"_blank\" class=\"external text\" href=\"http:\/\/docs.eoeandroid.com\/reference\/android\/app\/Service.html\">Service<\/a> if a potentially long running action needs to be taken in response to an Intent broadcast. As a side note, you should also avoid starting an Activity from an Intent Receiver, as it will spawn a new screen that will steal focus from whatever application the user is currently has running. If your application has something to show the user in response to an Intent broadcast, it should do so using the <a rel=\"nofollow\" target=\"_blank\" class=\"external text\" href=\"http:\/\/docs.eoeandroid.com\/reference\/android\/app\/NotificationManager.html\">Notification Manager<\/a>.<br \/>\nIntentReceiver\u6267\u884c\u65f6\u95f4\u7684\u7279\u6b8a\u9650\u5236\u610f\u5473\u7740\u5b83\u5e94\u8be5\u505a\uff1a\u5728\u540e\u53f0\u91cc\u505a\u5c0f\u7684\u3001\u7410\u788e\u7684\u5de5\u4f5c\u5982\u4fdd\u5b58\u8bbe\u5b9a\u6216\u8005\u6ce8\u518c\u4e00\u4e2aNotification\u3002\u548c\u5728\u4e3b\u7ebf\u7a0b\u91cc\u8c03\u7528\u7684\u5176\u5b83\u65b9\u6cd5\u4e00\u6837\uff0c\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u907f\u514d\u5728BroadcastReceiver\u91cc\u505a\u8017\u65f6\u7684\u64cd\u4f5c\u6216\u8ba1\u7b97\u3002\u4f46\u4e0d\u518d\u662f\u5728\u5b50\u7ebf\u7a0b\u91cc\u505a\u8fd9\u4e9b\u4efb\u52a1\uff08\u56e0\u4e3aBroadcastReceiver\u7684\u751f\u547d\u5468\u671f\u77ed\uff09\uff0c\u66ff\u4ee3\u7684\u662f\uff0c\u5982\u679c\u54cd\u5e94Intent\u5e7f\u64ad\u9700\u8981\u6267\u884c\u4e00\u4e2a\u8017\u65f6\u7684\u52a8\u4f5c\u7684\u8bdd\uff0c\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u542f\u52a8\u4e00\u4e2a<a rel=\"nofollow\" target=\"_blank\" class=\"external text\" href=\"http:\/\/docs.eoeandroid.com\/reference\/android\/app\/Service.html\">Service<\/a>\u3002\u987a\u4fbf\u63d0\u53ca\u4e00\u53e5\uff0c\u4f60\u4e5f\u5e94\u8be5\u907f\u514d\u5728Intent Receiver\u91cc\u542f\u52a8\u4e00\u4e2aActivity\uff0c\u56e0\u4e3a\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u753b\u9762\uff0c\u5e76\u4ece\u5f53\u524d\u7528\u6237\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u4e0a\u62a2\u593a\u7126\u70b9\u3002\u5982\u679c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u5728\u54cd\u5e94Intent\u5e7f\u64ad\u65f6\u9700\u8981\u5411\u7528\u6237\u5c55\u793a\u4ec0\u4e48\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528<a rel=\"nofollow\" target=\"_blank\" class=\"external text\" href=\"http:\/\/docs.eoeandroid.com\/reference\/android\/app\/NotificationManager.html\">Notification Manager<\/a>\u6765\u5b9e\u73b0\u3002<br \/>\n<br \/>\n<\/p>\n<h2> <span class=\"mw-headline\" id=\"Reinforcing_Responsiveness-.E5.8A.A0.E5.BC.BA.E5.93.8D.E5.BA.94\">Reinforcing Responsiveness-\u52a0\u5f3a\u54cd\u5e94<\/span><\/h2>\n<p><br \/>\nGenerally, 100 to 200ms is the threshold beyond which users will perceive lag (or lack of \"snappiness,\" if you will) in an application. As such, here are some additional tips beyond what you should do to avoid ANR that will help make your application seem responsive to users.<br \/>\n\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u91cc\uff0c100\u5230200ms\u662f\u7528\u6237\u80fd\u611f\u77e5\u963b\u6ede\u7684\u65f6\u95f4\u9608\u503c\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u989d\u5916\u7684\u6280\u5de7\u6765\u907f\u514dANR\uff0c\u5e76\u6709\u52a9\u4e8e\u8ba9\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u770b\u8d77\u6765\u6709\u54cd\u5e94\u6027\u3002<br \/>\n<br \/>\nIf your application is doing work in the background in response to user input, show that progress is being made (ProgressBar and ProgressDialog are useful for this).<br \/>\n\u5982\u679c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4e3a\u54cd\u5e94\u7528\u6237\u8f93\u5165\u6b63\u5728\u540e\u53f0\u5de5\u4f5c\u7684\u8bdd\uff0c\u53ef\u4ee5\u663e\u793a\u5de5\u4f5c\u7684\u8fdb\u5ea6\uff08<a rel=\"nofollow\" target=\"_blank\" class=\"external text\" href=\"http:\/\/docs.eoeandroid.com\/reference\/android\/widget\/ProgressBar.html\">ProgressBar<\/a>\u548c<a rel=\"nofollow\" target=\"_blank\" class=\"external text\" href=\"http:\/\/docs.eoeandroid.com\/reference\/android\/app\/ProgressDialog.html\">ProgressDialog<\/a>\u5bf9\u8fd9\u79cd\u60c5\u51b5\u6765\u8bf4\u5f88\u6709\u7528\uff09\u3002<br \/>\n<br \/>\nFor games specifically, do calculations for moves in a child thread.<br \/>\n\u7279\u522b\u662f\u6e38\u620f\uff0c\u5728\u5b50\u7ebf\u7a0b\u91cc\u505a\u79fb\u52a8\u7684\u8ba1\u7b97\u3002<br \/>\n<br \/>\nIf your application has a time-consuming initial setup phase, consider showing a splash screen or rendering the main view as quickly as possible and filling in the information asynchronously. In either case, you should indicate somehow that progress is being made, lest the user perceive that the application is frozen.<br \/>\n\u5982\u679c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u6709\u4e00\u4e2a\u8017\u65f6\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\u7684\u8bdd\uff0c\u8003\u8651\u53ef\u4ee5\u663e\u793a\u4e00\u4e2aSplash Screen\u6216\u8005\u5feb\u901f\u663e\u793a\u4e3b\u753b\u9762\u5e76\u5f02\u6b65\u6765\u586b\u5145\u8fd9\u4e9b\u4fe1\u606f\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u90fd\u5e94\u8be5\u663e\u793a\u6b63\u5728\u8fdb\u884c\u7684\u8fdb\u5ea6\uff0c\u4ee5\u514d\u7528\u6237\u8ba4\u4e3a\u5e94\u7528\u7a0b\u5e8f\u88ab\u51bb\u7ed3\u4e86\u3002\n<\/p>"}